{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youssef\\\\OneDrive\\\\Bureau\\\\Projet-Full-Stuck-main\\\\Projet-Full-Stuck-main\\\\Projet-Full-Stuck-main\\\\my_app\\\\ma-premiere-app\\\\Client\\\\src\\\\Admin_upl.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadFileComponent = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [imageList, setImageList] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Récupérer la liste des images téléversées lorsque le composant est monté\n    axios.get('http://localhost:3100/api/images').then(res => {\n      setImageList(res.data); // Supposant que la réponse de l'API est un tableau d'objets représentant les images\n    }).catch(error => {\n      console.error('Erreur lors de la récupération de la liste des images:', error);\n    });\n  }, []);\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('image', selectedFile);\n      axios.post('http://localhost:3100/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n          setUploadProgress(progress);\n        }\n      }).then(res => {\n        setUploadStatus('Image téléversée avec succès.');\n        navigate('/etudiant');\n      }).catch(error => {\n        console.error('Erreur lors du téléversement de l\\'image:', error);\n        setUploadStatus('Erreur lors du téléversement de l\\'image.');\n      });\n    }\n  };\n\n  const handleBack = () => {\n    navigate('/Admin_aff');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"T\\xE9l\\xE9verser une image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"T\\xE9l\\xE9verser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Progression: \", uploadProgress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 30\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liste des images t\\xE9l\\xE9vers\\xE9es :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: imageList.map((image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: image.fileName\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) // Supposant que chaque objet image a une propriété fileName\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Retour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadFileComponent, \"1GCSChgoQ8zfPE5dnwYNLzhZY1g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UploadFileComponent;\nexport default UploadFileComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFileComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","UploadFileComponent","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","imageList","setImageList","navigate","get","then","res","data","catch","error","console","handleFileChange","event","target","files","handleUpload","formData","FormData","append","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","handleBack","map","image","index","fileName"],"sources":["C:/Users/youssef/OneDrive/Bureau/Projet-Full-Stuck-main/Projet-Full-Stuck-main/Projet-Full-Stuck-main/my_app/ma-premiere-app/Client/src/Admin_upl.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst UploadFileComponent = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [imageList, setImageList] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Récupérer la liste des images téléversées lorsque le composant est monté\n    axios.get('http://localhost:3100/api/images')\n      .then(res => {\n        setImageList(res.data); // Supposant que la réponse de l'API est un tableau d'objets représentant les images\n      })\n      .catch(error => {\n        console.error('Erreur lors de la récupération de la liste des images:', error);\n      });\n  }, []);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('image', selectedFile);\n\n      axios.post('http://localhost:3100/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: (progressEvent) => {\n          const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n          setUploadProgress(progress);\n        }\n      })\n        .then(res => {\n          setUploadStatus('Image téléversée avec succès.');\n          navigate('/etudiant');\n        })\n        .catch(error => {\n          console.error('Erreur lors du téléversement de l\\'image:', error);\n          setUploadStatus('Erreur lors du téléversement de l\\'image.');\n        });\n    }\n  };\n\n  const handleBack = () => {\n    navigate('/Admin_aff');\n  };\n\n  return (\n    <div>\n      <h2>Téléverser une image</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Téléverser</button>\n      {uploadProgress > 0 && <p>Progression: {uploadProgress}%</p>}\n      {uploadStatus && <p>{uploadStatus}</p>}\n      <h3>Liste des images téléversées :</h3>\n      <ul>\n        {imageList.map((image, index) => (\n          <li key={index}>{image.fileName}</li> // Supposant que chaque objet image a une propriété fileName\n        ))}\n      </ul>\n      <button onClick={handleBack}>Retour</button>\n    </div>\n  );\n};\n\nexport default UploadFileComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}